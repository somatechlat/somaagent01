# Docker Compose file containing only shared infrastructure dependencies
# for local development (Kafka, Redis, Postgres, OPA). Application services
# are executed locally via scripts/runstack.py.

services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: somaAgent01_kafka
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "0"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_NUM_PARTITIONS: "3"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx1g"
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "1073741824"
    ports:
      - "${KAFKA_PORT:-20000}:9092"
    restart: unless-stopped
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./kafka-logs:/var/log/kafka
    healthcheck:
      test: ["CMD-SHELL", "</dev/tcp/0.0.0.0/9092 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 40s
    mem_limit: 4g
    cpus: "2"

  redis:
    image: redis:7-alpine
    container_name: somaAgent01_redis
    command: ["redis-server", "--save", "60", "1", "--appendonly", "yes", "--appendfsync", "everysec"]
    ports:
      - "${REDIS_PORT:-20001}:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis-conf:/usr/local/etc/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    mem_limit: 1g
    cpus: "1"

  postgres:
    image: postgres:16-alpine
    container_name: somaAgent01_postgres
    environment:
      POSTGRES_USER: soma
      POSTGRES_PASSWORD: soma
      POSTGRES_DB: somaagent01
      OPENFGA_POSTGRES_USER: openfga
      OPENFGA_POSTGRES_PASSWORD: openfga
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-20002}:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-backups:/backups
      - ./infra/postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U soma -d somaagent01"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 40s
    mem_limit: 2g
    cpus: "2"

  opa:
    image: openpolicyagent/opa:0.64.0
    container_name: somaAgent01_opa
    command: ["run", "--server", "--set=decision_logs.console=true"]
    ports:
      - "${OPA_PORT:-20009}:8181"
    restart: unless-stopped

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: somaAgent01_kafka_init
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["bash", "-lc"]
    command: bash /init/init-topics.sh
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./infra/kafka/init-topics.sh:/init/init-topics.sh:ro
    mem_limit: 600m
    restart: "no"

networks:
  default:
    external: true
    name: somaagent01

volumes:
  kafka_data:
  redis_data:
  postgres_data:
