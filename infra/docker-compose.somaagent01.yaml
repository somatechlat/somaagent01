version: '3.9'

services:
  kafka:
    image: bitnami/kafka:3.7.0
    container_name: soma-kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=INTERNAL://kafka:9092,CONTROLLER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_ENABLE_KRAFT=yes
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka

  redis:
    image: redis:7-alpine
    container_name: soma-redis
    command: ["redis-server", "--save", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:16-alpine
    container_name: soma-postgres
    environment:
      - POSTGRES_USER=soma
      - POSTGRES_PASSWORD=soma
      - POSTGRES_DB=somaagent01
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:v1.11.0
    container_name: soma-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    container_name: soma-clickhouse
    environment:
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: soma-prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./observability/alerts.yml:/etc/prometheus/alerts.yml:ro

  vault:
    image: hashicorp/vault:1.17
    container_name: soma-vault
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=dev-root
    ports:
      - "8200:8200"

  opa:
    image: openpolicyagent/opa:0.64.0
    container_name: soma-opa
    command: ["run", "--server", "--set=decision_logs.console=true"]
    ports:
      - "8181:8181"

  openfga:
    image: openfga/openfga:v1.8.3
    container_name: soma-openfga
    ports:
      - "8081:8081"

  vllm:
    image: vllm/vllm-openai:0.5.4
    container_name: soma-vllm
    environment:
      - VLLM_MODEL=meta-llama/Meta-Llama-3.1-8B-Instruct
    ports:
      - "8000:8000"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              count: 1

  whisper:
    image: ghcr.io/ggerganov/whisper.cpp:1.5.1
    container_name: soma-whisper
    command: ["/bin/sh", "-c", "./main -m models/ggml-large-v3.bin --server 0.0.0.0:9001"]
    ports:
      - "9001:9001"

  delegation-gateway:
    image: agent0ai/agent-zero:latest
    container_name: soma-delegation-gateway
    command: ["uvicorn", "services.delegation_gateway.main:app", "--host", "0.0.0.0", "--port", "8015"]
    environment:
      - LOG_LEVEL=INFO
      - DELEGATION_TOPIC=somastack.delegation
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - POSTGRES_DSN=postgresql://soma:soma@postgres:5432/somaagent01
    ports:
      - "8015:8015"

  delegation-worker:
    image: agent0ai/agent-zero:latest
    container_name: soma-delegation-worker
    command: ["python", "-m", "services.delegation_worker.main"]
    environment:
      - LOG_LEVEL=INFO
      - DELEGATION_TOPIC=somastack.delegation
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

networks:
  default:
    name: somaagent01

volumes:
  kafka_data:
  redis_data:
  postgres_data:
  qdrant_data:
  clickhouse_data:
