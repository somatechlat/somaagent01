apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
    component: postgres
spec:
  serviceName: {{ include "postgres.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "postgres.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "postgres.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: postgres
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            {{- $secretName := .Values.secret.name | default (printf "%s-credentials" (include "postgres.fullname" .)) }}
            - name: {{ .Values.secret.env.username | default "POSTGRES_USER" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ .Values.secret.usernameKey }}
            - name: {{ .Values.secret.env.password | default "POSTGRES_PASSWORD" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ .Values.secret.passwordKey }}
            - name: {{ .Values.secret.env.database | default "POSTGRES_DB" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ .Values.secret.databaseKey }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      {{- if not .Values.persistence.enabled }}
      volumes:
        - name: data
          emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size | default "5Gi" }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
  {{- end }}
