apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
    component: kafka
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: kafka
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: kafka
    spec:
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: kafka
          image: {{ .Values.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
            - containerPort: {{ .Values.controllerPort }}
          {{- $serviceHost := printf "%s.%s.svc.cluster.local" (include "kafka.fullname" .) .Release.Namespace }}
          env:
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_NODE_ID
              value: {{ .Values.nodeId | default "1" | quote }}
            - name: KAFKA_NODE_ID
              value: {{ .Values.nodeId | default "1" | quote }}
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "{{ .Values.nodeId | default "1" }}@{{ $serviceHost }}:{{ .Values.controllerPort }}"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:{{ .Values.service.targetPort }},CONTROLLER://:{{ .Values.controllerPort }}"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://{{ $serviceHost }}:{{ .Values.service.port }}"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_ENABLE_KRAFT
              value: "yes"
            - name: KAFKA_CFG_KRAFT_CLUSTER_ID
              value: {{ .Values.clusterId | quote }}
            - name: KAFKA_CLUSTER_ID
              value: {{ .Values.clusterId | quote }}
            - name: CLUSTER_ID
              value: {{ .Values.clusterId | quote }}
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "1"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            {{- range .Values.env.extra }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
